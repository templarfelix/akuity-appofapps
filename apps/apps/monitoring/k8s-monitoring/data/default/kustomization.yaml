apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
helmCharts:
- name: k8s-monitoring
  namespace: monitoring
  #includeCRDs: true
  releaseName: k8s-monitoring
  version: 0.1.15
  repo: https://grafana.github.io/helm-charts
  # https://github.com/grafana/k8s-monitoring-helm/blob/main/charts/k8s-monitoring/values.yaml
  valuesInline:
    cluster:
      name: "dev"

    externalServices:
      prometheus:
        host: "https://prometheus-prod-13-prod-us-east-0.grafana.net"
        basicAuth:
          username: "1172750"
          password: "glc_eyJvIjoiOTM3MTI3IiwibiI6ImRldiIsImsiOiJxM0xFckhzZDI1MnNBODg2eDAwM2R6ZG4iLCJtIjp7InIiOiJwcm9kLXVzLWVhc3QtMCJ9fQ=="

      loki:
        host: "https://logs-prod-006.grafana.net"
        basicAuth:
          username: "685450"
          password: "glc_eyJvIjoiOTM3MTI3IiwibiI6ImRldiIsImsiOiJxM0xFckhzZDI1MnNBODg2eDAwM2R6ZG4iLCJtIjp7InIiOiJwcm9kLXVzLWVhc3QtMCJ9fQ=="

    opencost:
      opencost:
        exporter:
          defaultClusterId: "my-cluster"
        prometheus:
          external:
            url: "https://prometheus-prod-13-prod-us-east-0.grafana.net/api/prom"

    extraConfig: |
      discovery.relabel "cert_manager" {
        targets = discovery.kubernetes.services.targets
        rule {
          source_labels = ["__meta_kubernetes_service_label_app_kubernetes_io_name"]
          regex = "cert-manager"
          action = "keep"
        }
      }

      prometheus.scrape "cert_manager" {
        job_name     = "integrations/cert-manager"
        targets      = discovery.relabel.cert_manager.output
        honor_labels = true
        forward_to   = [prometheus.remote_write.grafana_cloud_prometheus.receiver]
      }